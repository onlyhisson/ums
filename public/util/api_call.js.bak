const request = require('request');
const querystring = require('querystring');
const md5 = require('md5')

exports.apiIns = function (method, uri, bindVal, callback) {
    //var PORT = ':' + config.agent_port;
    let HOST = 'https://www.ums.hk'
    let BASE_PATH = '';
    let OPTIONS = {
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        url: null,
        body: null,
        query : null
    };

    const MERCHANT_ID = "10113";
    const MERCHANT_KEY = "39UQYSE2VUGGUTESUTY2BNMHD5B4PFFF";
    let reqTimestamp = new Date().getTime();
    let data = {
        merchant_id: MERCHANT_ID,
        timestamp: reqTimestamp,
        email: 'test3@163.com',
        pwd: '123456',
        first_name: 'Li',
        last_name: 'Hua',
        card_no: '12345678'
    };
    data['sign'] = sign(data, MERCHANT_KEY);

    //OPTIONS.url = HOST + PORT + BASE_PATH + uri;
    OPTIONS.url = HOST + BASE_PATH + uri;

    if (method === 'get') {
        var url_qs = querystring.stringify(bindVal);
        request.get(OPTIONS.url + '?' + url_qs, function (err, res, result) {
            try {
                statusCodeErrorHandler(res.statusCode, callback, result);
            } catch (e) {
                console.log(e);
            }
        });
    } else if (method === 'post') {
        //OPTIONS.body = JSON.stringify(bind_val);
        OPTIONS.body = querystring.stringify(bindVal);
        request.post(OPTIONS, function (err, res, result) {
            try {
                statusCodeErrorHandler(res.statusCode, callback, result);
            } catch (e) {
                console.log(e);
            }
        });
    } else {

    }

    return callback;
}

exports.callApi = function(var1, var2) {
    const merchant_id = "10113";
    const merchant_key = "39UQYSE2VUGGUTESUTY2BNMHD5B4PFFF";
    let URL = "https://www.ums.hk";
    let api_path = "/userapi/register";
    let reqTimestamp = new Date().getTime();
    
    let data = {
        merchant_id: merchant_id,
        timestamp: reqTimestamp,
        email: 'test3@163.com',
        pwd: '123456',
        first_name: 'Li',
        last_name: 'Hua',
        card_no: '12345678'
    };
    
    data['sign'] = sign(data, merchant_key);
    
    var formData = querystring.stringify(data);
    var contentLength = formData.length;
    
    request({
        headers: {
            'Content-Length': contentLength,
            'Content-Type': 'application/x-www-form-urlencoded'
        },
            uri: URL + api_path,
            body: formData,
            method: 'POST'
        }, function (err, res, body) {
            if(err){
                //console.log(err);
                return;
            }
            console.log(JSON.parse(body)) // { status: 10003, msg: '账户已存在', data: '' } 
            return JSON.parse(body);
        }
    );
}


/**************************************************************
 * function
 **************************************************************/

function sign(jsonData, apiKey) {
    
    let str = "";
    let ordered = {};

    Object.keys(jsonData).sort().forEach(function(key) {
        ordered[key] = jsonData[key];
    });
    
    for(key in ordered) {
        str += key+"="+ordered[key]+"&"
    }

    return md5(str+"key="+apiKey).toUpperCase();
}

// 에러 핸들링
function statusCodeErrorHandler(statusCode, callback , data) {
    /*
    200 성공
    400 Bad Request - field validation 실패시
    401 Unauthorized - API 인증,인가 실패
    404 Not found ? 해당 리소스가 없음
    500 Internal Server Error - 서버 에러
    */
    // console.log('###############################################');
    // console.log('# status_message : ' + statusCode);
    // console.log('# ' + data);
    // console.log('###############################################');
  
    switch (statusCode) {
        case 200:
            callback(null, JSON.parse(data));
            break;
        default:
            callback('error', JSON.parse(data));
            break;
    }
  }
  